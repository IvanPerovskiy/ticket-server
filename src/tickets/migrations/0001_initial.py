# Generated by Django 3.2.6 on 2021-10-26 23:12

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.IntegerField(null=True)),
                ('category', models.IntegerField(choices=[(0, 'Организатор перевозок'), (1, 'Агент'), (2, 'Перевозчик')])),
                ('company_form', models.CharField(blank=True, max_length=200)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('secop_id', models.CharField(blank=True, max_length=12, null=True)),
                ('short_name', models.CharField(blank=True, max_length=100, null=True)),
                ('director', models.CharField(blank=True, max_length=200, null=True)),
                ('position', models.CharField(blank=True, max_length=200, null=True)),
                ('sign_doc', models.CharField(blank=True, max_length=200, null=True)),
                ('inn', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('ogrn', models.CharField(blank=True, max_length=15, null=True)),
                ('kpp', models.CharField(blank=True, max_length=9, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Новый'), (1, 'Активный'), (2, 'Заблокированный'), (3, 'Удаленный')], default=1)),
                ('registration_address', models.CharField(blank=True, max_length=200, null=True)),
                ('actual_address', models.CharField(blank=True, max_length=200, null=True)),
                ('correspondence_address', models.CharField(blank=True, max_length=200, null=True)),
                ('bic', models.CharField(blank=True, max_length=9, null=True)),
                ('bank', models.CharField(blank=True, max_length=9, null=True)),
                ('correspondent_account', models.CharField(blank=True, max_length=100, null=True)),
                ('account', models.CharField(blank=True, max_length=100, null=True)),
                ('agent_fee', models.DecimalField(decimal_places=2, default='0.00', max_digits=20)),
                ('agent_fee_percent', models.BooleanField(default=False)),
                ('service_fee', models.DecimalField(decimal_places=2, default='0.00', max_digits=20)),
                ('service_fee_percent', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('route_number', models.IntegerField(db_index=True)),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
                ('revenue_type', models.IntegerField(choices=[(0, 'Выручка не распределяется'), (1, 'Возмещение ')], default=0)),
                ('tariff_type', models.IntegerField(choices=[(0, 'Нерегулируемый'), (1, 'Регулируемый')], default=0)),
                ('route_type', models.IntegerField(choices=[(0, 'Муниципальный'), (1, 'Межмуниципальный'), (2, 'Смежный межрегиональный')], default=0)),
                ('secop_id', models.CharField(blank=True, max_length=12)),
                ('route_detail', models.TextField(blank=True, null=True)),
                ('carriers', models.ManyToManyField(blank=True, related_name='routes', to='tickets.Company')),
                ('transfer_routes', models.ManyToManyField(blank=True, to='tickets.Route')),
            ],
            options={
                'verbose_name': 'Маршрут',
                'verbose_name_plural': 'Маршруты',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('value', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('number', models.IntegerField(db_index=True, unique=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Активный'), (2, 'Заблокированный'), (3, 'Отключенный')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=250)),
                ('series', models.CharField(blank=True, max_length=8, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Активный'), (2, 'Завершенный'), (3, 'Списанный')], default=1)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('completed', models.DateTimeField(blank=True, null=True)),
                ('disabled', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('qr_code', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(max_length=200)),
                ('salt', models.CharField(max_length=200)),
                ('status', models.IntegerField(choices=[(0, 'Новый'), (1, 'Активный'), (2, 'Заблокированный'), (3, 'Удаленный')])),
                ('role', models.IntegerField(choices=[(0, 'Администратор'), (1, 'Администратор ИБ'), (2, 'Агент'), (3, 'Продавец'), (4, 'Перевозчик'), (5, 'Контроллер'), (6, 'Стационарный валидатор'), (7, 'Аналитик'), (8, 'Пассажир')])),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='tickets.company')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('number', models.IntegerField(db_index=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('number', models.IntegerField(db_index=True, unique=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('routes', models.ManyToManyField(to='tickets.Route')),
            ],
        ),
        migrations.CreateModel(
            name='Workday',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('closed', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Открыта'), (2, 'Закрыта')], default=1)),
                ('validator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workdays', to='tickets.user')),
            ],
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=10, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('lifetime', models.PositiveIntegerField(blank=True, null=True)),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('number', models.IntegerField()),
                ('agent_permission', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'Активный'), (2, 'Заблокированный'), (3, 'Отключенный')], default=1)),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariff_ticket_types', to='tickets.tariff')),
                ('vehicle_types', models.ManyToManyField(to='tickets.VehicleType')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='tickets.zone')),
            ],
        ),
        migrations.CreateModel(
            name='TicketNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='number', to='tickets.ticket')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='seller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.user'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='ticket_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='tickets.tickettype'),
        ),
        migrations.AddField(
            model_name='route',
            name='vehicle_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_type_routes', to='tickets.vehicletype'),
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('operation_type', models.IntegerField(choices=[(0, 'Поездка')], default=0)),
                ('route_number', models.CharField(blank=True, max_length=25, null=True)),
                ('run_number', models.CharField(blank=True, max_length=25, null=True)),
                ('vehicle_number', models.CharField(blank=True, max_length=25, null=True)),
                ('license_plate', models.CharField(blank=True, max_length=25, null=True)),
                ('validator_number', models.IntegerField(blank=True, null=True)),
                ('validator_type', models.CharField(blank=True, max_length=1, null=True)),
                ('created', models.DateTimeField()),
                ('imported', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='tickets.ticket')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_type_operations', to='tickets.vehicletype')),
                ('workday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='tickets.workday')),
            ],
            options={
                'verbose_name': 'Операция',
                'verbose_name_plural': 'Операции',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('maker', models.CharField(max_length=200)),
                ('model_name', models.CharField(max_length=100)),
                ('factory_number', models.CharField(max_length=100)),
                ('series_number', models.CharField(max_length=100)),
                ('device_type', models.IntegerField(choices=[(0, 'Продажа'), (1, 'Гашение'), (2, 'Контроль')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(1, 'Активный'), (2, 'Заблокированный')], default=1)),
                ('status_updated', models.DateTimeField(blank=True, null=True)),
                ('last_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='tickets.company')),
                ('validator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device', to='tickets.user')),
            ],
            options={
                'verbose_name': 'Валидатор',
                'verbose_name_plural': 'Валидаторы',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='tickets.company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='ticket_types',
            field=models.ManyToManyField(blank=True, to='tickets.TicketType'),
        ),
        migrations.AddField(
            model_name='company',
            name='vehicle_types',
            field=models.ManyToManyField(blank=True, to='tickets.VehicleType'),
        ),
    ]
